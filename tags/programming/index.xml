<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on urpylka՚s blog!</title>
    <link>https://urpylka.com/tags/programming/</link>
    <description>Recent content in programming on urpylka՚s blog!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Artem Smirnov</copyright>
    <lastBuildDate>Mon, 24 Jan 2022 11:05:00 +0200</lastBuildDate>
    
	<atom:link href="https://urpylka.com/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Опеределение способов подключения Huawei E352 к Linux</title>
      <link>https://urpylka.com/posts/post-63/</link>
      <pubDate>Mon, 24 Jan 2022 11:05:00 +0200</pubDate>
      
      <guid>https://urpylka.com/posts/post-63/</guid>
      <description>Ранее я писал статью про восстановление модема Huawei E352. В этой я постараюсь разобраться как он отображается в системе и как им можно управлять.
Рассмотрим ещё раз вывод устройств в папке /dev:
&amp;gt; ls -l /dev/ ... drwxr-xr-x 2 root root 80 Jan 22 08:40 bsg ... crw------- 1 root root 180, 176 Jan 22 08:40 cdc-wdm0 lrwxrwxrwx 1 root root 3 Jan 22 08:40 cdrom -&amp;gt; sr0 ... brw-rw---- 1 root disk 8, 0 Jan 22 08:40 sda drwxr-xr-x 4 root root 80 Jan 22 08:40 serial .</description>
    </item>
    
    <item>
      <title>Приветственное сообщение на Raspberry Pi (motd, profile.d)</title>
      <link>https://urpylka.com/posts/post-61/</link>
      <pubDate>Sun, 16 Jan 2022 13:11:00 +0200</pubDate>
      
      <guid>https://urpylka.com/posts/post-61/</guid>
      <description>Я в принципе уже знал как +/- работает вывод текстовой информации при логине. Однако написать это меня побудил следующий вывод. А точнее две его последние строки.
artemsmirnov@Artems-MacBook-Pro ~ % ssh pi@theimage-9373.local Linux theimage-9373 5.10.17+ #1403 Mon Feb 22 11:26:13 GMT 2021 armv6l The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law.</description>
    </item>
    
    <item>
      <title>Bash: Parameter Expansion to do a nested array</title>
      <link>https://urpylka.com/posts/post-60/</link>
      <pubDate>Tue, 04 Jan 2022 19:00:00 +0200</pubDate>
      
      <guid>https://urpylka.com/posts/post-60/</guid>
      <description>Main idea how to make nested array in Shell is use a separator for example ::.
But the trick is in using Parameter Expansion for split elements.
 Parameter Expansion is the term that refers to any operation that causes a parameter to be expanded (replaced by content). In its most basic appearance, the expansion of a parameter is achieved by prefixing that parameter with a $ sign.
 #!/bin/sh  HOSTS=( &amp;#39;example-1.</description>
    </item>
    
    <item>
      <title>Настройка Marlin под UlTi‑Steel (BigTreeTech SKR 1.3)</title>
      <link>https://urpylka.com/posts/post-56/</link>
      <pubDate>Tue, 04 Jan 2022 09:39:00 +0200</pubDate>
      
      <guid>https://urpylka.com/posts/post-56/</guid>
      <description>Привет! Необходимость собрать прошивку для UlTi-Steel у меня возникла по нескольким причинам:
 Потому что сами ребята из Ivilol больше не обновляют прошивку для первой версии UlTi-Steel. Если посмотреть в их репозиторий у меня кровь из глаз идет и возникает много вопросов. У меня есть необходимость добавить в прошивку свои настройки. Полный бардак происходит в истории и коде самого Marlin. Учитывая это, я бы не хотел обновлять прошивку с использованием операции Merge, а делать Rebase небольшого количества своих коммитов (учитывая, что это не изменения к Marlin, а лишь ограниченный набор настроек для конкретного принтера, я позволю себе это).</description>
    </item>
    
    <item>
      <title>Видеозахват на Raspberry Pi. Часть 2: Software</title>
      <link>https://urpylka.com/posts/post-59/</link>
      <pubDate>Fri, 05 Nov 2021 23:36:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-59/</guid>
      <description>Навигация по серии статей:
 Видеозахват на Raspberry Pi. Часть 1: Hardware Видеозахват на Raspberry Pi. Часть 2: Software   Это вторая статья из серии про работу с видео-устройствами на Raspberry Pi. Если в первой статье я делал акцент на физические ограничения компьютера, то в этой я постараюсь описать общие принципы работы с видео-устройствами в плоскости софта. На это меня подтолкнуло собственное непонимание общей картины как стримится видео. И сколько я не читал статей, получалось всё хуже – сколько людей, столько и способов.</description>
    </item>
    
    <item>
      <title>How to update Prometheus&#39;s configuration?</title>
      <link>https://urpylka.com/posts/post-58/</link>
      <pubDate>Thu, 28 Oct 2021 19:28:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-58/</guid>
      <description>Hi! So, about prometheus configuration updating on the fly.
Update configution file The one problem is the deleting configuration file and changing inode file data.
Upload file to remote server and update conf file there:
import paramiko hostname = &amp;#34;example.com&amp;#34; username = &amp;#34;user ssh = paramiko.SSHClient() ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy()) ssh.connect(hostname=hostname, username=username) sftp = ssh.open_sftp() # https://docs.paramiko.org/en/stable/api/sftp.html#paramiko.sftp_client.SFTPClient.file with sftp.file(target_file, &amp;#39;w+&amp;#39;) as output, open(local_file, &amp;#39;r&amp;#39;) as input: while True: try: buffer = input.read(5000) # 5KB if buffer == &amp;#39;&amp;#39;: print(&amp;#34;Uploading was finished&amp;#34;) break output.</description>
    </item>
    
    <item>
      <title>Общая теория IEEE 802.11 и режимы работы Wi‑Fi адаптеров</title>
      <link>https://urpylka.com/posts/post-40/</link>
      <pubDate>Thu, 23 Sep 2021 17:58:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-40/</guid>
      <description>Общая теория IEEE 802.11 IEEE 802.11 — набор стандартов связи для коммуникации в беспроводной локальной сетевой зоне частотных диапазонов 0,9; 2,4; 3,6; 5 и 60 ГГц. Больше на wiki.
Пользователям более известен по названию Wi-Fi, фактически являющемуся брендом, предложенным и продвигаемым организацией Wi-Fi Alliance.
В стандарте IEEE 802.11 определены два способа организации сети:
 Инфраструктурный (Infrastructure); Независимый (Independent), часто также называемый одноранговым (Ad-Hoc).  В инфраструктурном режиме функции координации передачи данных выполняет специальный выделенный узел, точка доступа (ТД, Access Point, АР).</description>
    </item>
    
    <item>
      <title>Эталонная модель OSI</title>
      <link>https://urpylka.com/posts/post-39/</link>
      <pubDate>Thu, 23 Sep 2021 17:39:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-39/</guid>
      <description>Часто в проектах которыми я занимаюсь приходится оперировать и обсуждать уровнями модели OSI. Для унификации знаний на эту тему подготовил эту статью. Основным источником для неё послужила статья с pcradar.ru, а я лишь добавил немного информации и причесал оформление.
Для согласования работы устройств сети от разных производителей, обеспечения взаимодействия сетей, которые используют различную среду распространения сигнала создана эталонная модель взаимодействия открытых систем (сетевая модель OSI).
Эталонная модель построена по иерархическому принципу.</description>
    </item>
    
    <item>
      <title>Устройство сети в Linux</title>
      <link>https://urpylka.com/posts/post-33/</link>
      <pubDate>Tue, 30 Mar 2021 17:40:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-33/</guid>
      <description>В статье две части:
 Устройство сети Raspberry Pi OS
в которой описано базовое устройство сети в преднастроенной операционной системе Raspberry Pi OS. А затем описана структура, которую я использую в своём сборщике образов. Инструменты для работы с сетью
в которой содержатся мои заметки о утилитах Linux для работы с сетью.  Устройство сети Raspberry Pi OS Штатная конфигурация сети В официально предоставляемой ОС запущены следующие службы связанные с настройкой сети:</description>
    </item>
    
    <item>
      <title>Ускорение загрузки: systemd-analyze</title>
      <link>https://urpylka.com/posts/post-26/</link>
      <pubDate>Tue, 16 Feb 2021 12:40:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-26/</guid>
      <description>Это краткая заметка по анализу времени загрузки служб ОС.
В Linux дистрибутивах в которых используется systemd-analyze есть возможность проанализировать сколько какие службы загружались по времени:
systemd-analyze critical-chain # если включен графический интерфейс, то его можно выключить sudo systemctl disable graphical.target Источники:
 https://losst.ru/uskorenie-zagruzki-linux https://wiki.archlinux.org/index.php/Improving_performance/Boot_process  </description>
    </item>
    
    <item>
      <title>Видеозахват на Raspberry Pi. Часть 1: Hardware</title>
      <link>https://urpylka.com/posts/post-17/</link>
      <pubDate>Mon, 04 Jan 2021 01:09:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-17/</guid>
      <description>Навигация по серии статей:
 Видеозахват на Raspberry Pi. Часть 1: Hardware Видеозахват на Raspberry Pi. Часть 2: Software   Во многих прикладных задачах возникает необходимость работы с видеопотоками на одноплатных компьютерах (single board computer – SBC).
Для себя ставлю задачу изложить в этой статье накопленные теоретико-практические знания по организации работы с видеопотоками на SBC:
 Работа с видеопотоками средствами процессора и графического со-процессора (кодирование / декодирование видео); Основные принципы и программное обеспечение для организации стриминга видео; Узкие аппаратные места некоторых SBC.</description>
    </item>
    
    <item>
      <title>Заметка по работе с SSH</title>
      <link>https://urpylka.com/posts/post-5/</link>
      <pubDate>Sun, 13 Dec 2020 19:32:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-5/</guid>
      <description>Выкачить что-то:
scp -P 22 pi@172.24.1.1:/home/pi/.ssh/authorization_keys ~/Desktop Генерация и аутентификация с помощью SSH ключа:
 habrahabr.ru help.github.com itman.in  Добавить себя в authorization_keys на удаленном хосте:
ssh-copy-id &amp;#39;-p 22 pi@172.24.1.1&amp;#39; Обратный и прямой туннели:
 habr.com rus-linux.net itsecforu.ru  Прокидывание порта:
ssh -L 5601:10.246.182.189:5601 Смена пароля приватного RSA ключа:
ssh-keygen -f &amp;lt;path-to.key&amp;gt; -p Просмотр приватного ключа:
openssl rsa -text -noout -in &amp;lt;path-to.key&amp;gt;  Также можно сменить пароль на приватный RSA или DSA ключ</description>
    </item>
    
    <item>
      <title>Заметка по работе с GIT</title>
      <link>https://urpylka.com/posts/post-20/</link>
      <pubDate>Sun, 13 Dec 2020 13:40:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-20/</guid>
      <description>Работа с Submodule https://git-scm.com/book/ru/v1/Инструменты-Git-Подмодули
git submodule init git submodule update Полезные ссылки  Удаление первого коммита stackoverflow.com Отмена последнего коммита в git evtuhovich.ru Объединение репозиториев eax.me Конфликт при объединении несвязных историй --allow-unrelated-histories stackoverflow.com Продвинутое слияние git-scm.com Работа с удалёнными репозиториями git-scm.com Теория GIT habrahabr.ru Раскрытие тайн reset git-scm.com Объединение репозиториев qaru.site  Первоначальная настройка git Все очень хорошо изложено в этой статье, не вижу смысла копировать
https://git-scm.com/book/ru/v2/Введение-Первоначальная-настройка-Git
Базовые команды # Rebase 3х верхних коммитов в интерактивном режиме (через текстовый редактор) git rebase -i HEAD~3 # Перетереть историю в текущем remote git push --force # Снести верхние 3 коммита (без удаления изменений), для полного удаления комитов - флаг `--hard` git reset HEAD~3 # Застейджить все изменения git add .</description>
    </item>
    
    <item>
      <title>Платформа для собственного блога</title>
      <link>https://urpylka.com/posts/post-7/</link>
      <pubDate>Fri, 23 Oct 2020 19:56:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-7/</guid>
      <description>Статья о про выбор платформы для собственного блога и дальнейшие планы.
2013: Blogger История началась в феврале 2013 года. Я был студентом Аэрокоса (СГАУ – Самарский университет), и уже 4 года занимался веб-разработкой. Тогда мне пришла идея писать заметки. Делать это на собственной платформе вроде WordPress не хотелось. На фоне Livejournal с его отвратительно перегруженным дизайном и рекламой во всех щелях вполне изящным казалось решение от Google – платформа Blogger. Её я и использовал.</description>
    </item>
    
    <item>
      <title>Cheatsheet: Python</title>
      <link>https://urpylka.com/posts/post-9/</link>
      <pubDate>Wed, 22 Apr 2020 12:35:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-9/</guid>
      <description>Everytime when I am doing a something by Python (or by something else) I need to use articles about main libraries. Despite that I&amp;rsquo;ve seen it a lot of times, it just can&amp;rsquo;t fit in my head. So I wrote this article to get the information quickly.
Basically it consist links to russian resources.
 os.path decorators strings regular expression queue, lock web, asyncio, aiohttp cycles, for, while by value / by path list cycle for list remove spaces in a string low register in a string  Serial monitor on Python import serial port = serial.</description>
    </item>
    
    <item>
      <title>Nginx reverse proxy</title>
      <link>https://urpylka.com/posts/post-12/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://urpylka.com/posts/post-12/</guid>
      <description>Nginx reverse proxy needs where we want to get access to few resources by one external IP address and port.
I used that for several http web services (debian repository, my website and phpmyadmin). The following config is pairing server_name and proxy_pass as target location. Pleese look at last section with default_server atribute. It needs to set default site (in this case page with 501 Internal Error).
Quickstart   Create webproxy.</description>
    </item>
    
    <item>
      <title>Заметка по работе с Bash</title>
      <link>https://urpylka.com/posts/post-45/</link>
      <pubDate>Thu, 16 Apr 2020 02:14:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-45/</guid>
      <description>У меня накопилось достаточно большое количество переодически гуглящихся вещей, которые хочу структурировать в этой заметке. Заметка будет обновлена.
Bash Перенаправления и pipe | - передача аргумента
&amp;gt; – передача вывода команды в новый файл или перезапись существующего файла
&amp;gt;&amp;gt; - передача вывода команды в новый файл или дозапись с конца
Стандартный вывод команды происходит с числом 1, вывод ошибок с числом 2. Выводы перенаправлять в разные файлы отдельно.
2&amp;gt;&amp;amp;1 – перенаправляет вывод ошибки на стандартный вывод, поэтому они появляются вместе и могут быть совместно перенаправлены в файл.</description>
    </item>
    
    <item>
      <title>Заметка по работе с SQL</title>
      <link>https://urpylka.com/posts/post-42/</link>
      <pubDate>Thu, 16 Apr 2020 02:14:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-42/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Работа с файловой системой Linux</title>
      <link>https://urpylka.com/posts/post-51/</link>
      <pubDate>Thu, 16 Apr 2020 02:14:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-51/</guid>
      <description>Что такое UUID / PARTUUID Как видно из скриншота ниже, в ОС для удобства обращения к блочным устройствам автоматически создаются различные симлинки.
UUID задается при форматировании файловой системы и хранится в её суперблоке. Поэтому при побайтовом копировании разделов UUID не меняется.
При подключении нескольких блочных устройств с одинаковыми UUID, в /dev/disk/by-uuid отображается только последнее подключенное устройство. Подробнее rus-linux.net.
PARTUUID также не меняется при побайтовом копировании. А также не меняется при ручном изменении размера файловой системы.</description>
    </item>
    
    <item>
      <title>Управление службами в Linux (systemctl)</title>
      <link>https://urpylka.com/posts/post-48/</link>
      <pubDate>Thu, 16 Apr 2020 02:14:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-48/</guid>
      <description>systemctl start SOME_SERVICE systemctl stop SOME_SERVICE systemctl enable SOME_SERVICE systemctl disable SOME_SERVICE journalctl -f -u SOME_SERVICE journalctl -u SOME_SERVICE --since=&amp;#34;2017-08-14 00:00:00&amp;#34; Чтобы добавить свой сервис, можно либо выполнить команду sudo systemctl enable &amp;lt;path-to-service-file&amp;gt; или, лучше, добавить его в директорию /etc/systemd/system/ с расширением .service. Также есть другие пути, подробнее ниже:
Источники:
 habr.ru власть над демонами habr.ru Уровни загрузки системы, как я понял апдейт рси как раз запихивает службы туды сюды habr.</description>
    </item>
    
    <item>
      <title>Отображение скрытых файлов MacOS X</title>
      <link>https://urpylka.com/posts/post-25/</link>
      <pubDate>Sun, 19 May 2013 14:43:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-25/</guid>
      <description>Cкрытые файлы обычно являются файлами системы или файлами сторонних программ, которые, в виду безопасности или других причин показывать пользователю не нужно. По умолчанию Finder не показывает скрытые файлы, для того чтобы ключить отображение необходимо:
 Откройте программу Терминал (Terminal), она находится в папке /Applications/Utilities Введите команду: defaults write com.apple.Finder AppleShowAllFiles 1 &amp;amp;&amp;amp; killall Finder Перезапустите Finder, зажав кнопку Option (alt) и нажав на значок Finder в доке.   PS Для отключения данного разрешения снова введите команду, изменив значение c &amp;ldquo;1&amp;rdquo; на &amp;ldquo;0&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Оперативная память с ECC</title>
      <link>https://urpylka.com/posts/post-43/</link>
      <pubDate>Fri, 08 Feb 2013 22:41:00 +0400</pubDate>
      
      <guid>https://urpylka.com/posts/post-43/</guid>
      <description>В районе двух лет назад, столкнулся с интересным для себя открытием, при покупке комплектующих, мне в довесок досталась серверная память Samsung M395T6553CZ4-CE61. Мне стало интересно, чем она отличается от обычной ОЗУ, и я решил найти о ней информацию. Искать долго не пришлось, но среди источников не было ни одного, содержащего всё и сразу. Тогда я и написал эту заметку, в которой постарался объединить для себя всю полезную информацию.
Надо заметить, что ножки у неё смещены и вместо обычной DDR2 её не вставишь.</description>
    </item>
    
  </channel>
</rss>